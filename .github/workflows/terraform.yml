on:
  push:
    branches:
    - main
    paths:
    - 'terraform/*'
  pull_request:
    paths:
    - 'terraform/*'
  workflow_dispatch:

name: 'Terraform'

permissions:
  id-token: write
  contents: read

defaults:
  run:
    shell: pwsh

env:
  terraformDir: 'terraform'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AAD_APP_ID }}
        tenant-id: ${{ secrets.AAD_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        enable-AzPSSession: true
      
    # - uses: hashicorp/setup-terraform@v2
    #   with:
    #     terraform_version: 1.2.0

    - name: Install terraform
      run: |
        TER_VER=`curl -s https://api.github.com/repos/hashicorp/terraform/releases/latest | grep tag_name | cut -d: -f2 | tr -d \"\,\v | awk '{$1=$1};1'`
        wget https://releases.hashicorp.com/terraform/${TER_VER}/terraform_${TER_VER}_linux_amd64.zip
        unzip terraform_${TER_VER}_linux_amd64.zip
        sudo mv terraform /usr/local/bin/
    
    - name: Terraform Format
      run: terraform fmt

    - name: Terraform Init
      run: terraform init -backend-config "subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" -backend-config "tenant_id=${{ secrets.AAD_TENANT_ID }}" -backend-config "client_id=${{ secrets.AAD_APP_ID }}"

    - name: Terraform Validate
      run: terraform validate
    
    - name: Terraform Plan
      run: |
        terraform -version
        terraform plan -out tfplan
    
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      run: terraform apply --auto-approve "tfplan"